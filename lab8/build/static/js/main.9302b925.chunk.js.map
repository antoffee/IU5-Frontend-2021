{"version":3,"sources":["context.js","todolist/TodoItem.js","todolist/TodoList.js","todolist/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","onChange","useContext","deleteTodo","editTodo","useState","title","todoInput","setTodoInput","itemClasses","completed","push","className","type","checked","id","join","value","event","target","onClick","bind","TodoList","props","todos","map","onToggle","AddTodo","onAdd","setValue","onSubmit","preventDefault","trim","placeholder","App","setTodos","saveTodosToLocal","localStorage","setItem","JSON","stringify","useEffect","localTodos","parse","getItem","Provider","filter","item","newTitle","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9302b925.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context","import React, { useState, useContext } from \"react\";\r\nimport Context from \"../context\";\r\n\r\nexport default function TodoItem({ todo, onChange }) {\r\n  const { deleteTodo, editTodo } = useContext(Context);\r\n  const [todoInput, setTodoInput] = useState(todo.title);\r\n  const itemClasses = [\"item-input\"];\r\n  if (todo.completed) itemClasses.push(\"done\");\r\n  return (\r\n    <li className=\"todo-item\">\r\n      <span className=\"todo-title\">\r\n        <input\r\n          title=\"Изменить статус\"\r\n          type=\"checkbox\"\r\n          checked={todo.completed}\r\n          onChange={() => onChange(todo.id)}\r\n        />\r\n        <input\r\n          title='Редактировать'\r\n          className={itemClasses.join(\" \")}\r\n          type=\"text\"\r\n          value={todoInput}\r\n          onChange={(event) => setTodoInput(event.target.value)}\r\n        />\r\n      </span>\r\n      <button\r\n        className=\"save-btn\"\r\n        title=\"Сохранить изменения\"\r\n        onClick={editTodo.bind(null, todo.id, todoInput)}\r\n      >\r\n        &#128190;\r\n      </button>\r\n      <button\r\n        title=\"Удалить\"\r\n        className=\"delete-btn\"\r\n        onClick={deleteTodo.bind(null, todo.id)}\r\n      >\r\n        &#10060;\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nexport default function TodoList(props) {\r\n  return (\r\n    <div className=\"list\">\r\n      {props.todos.map((todo) => {\r\n        return <TodoItem todo={todo} key={todo.id} onChange={props.onToggle} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nfunction AddTodo({ onAdd }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    if (value.trim()) {\r\n      onAdd(value);\r\n      setValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        placeholder='Введите новую задачу'\r\n        className=\"add-todo\"\r\n        value={value}\r\n        onChange={(event) => setValue(event.target.value)}\r\n      />\r\n      <button className=\"add-btn\" type=\"submit\">\r\n        Добавить\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n","//import logo from './logo.svg';\r\n//import './App.css';\r\nimport React, { useEffect } from \"react\";\r\nimport TodoList from \"./todolist/TodoList\";\r\nimport Context from \"./context\";\r\nimport AddTodo from \"./todolist/AddTodo\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = React.useState([]);\r\n  // id, completed, title\r\n\r\n  useEffect(() => {\r\n    const localTodos = JSON.parse(localStorage.getItem(\"todos\") || \"[]\");\r\n    setTodos(localTodos);\r\n  }, []);\r\n  // eslint-disable-next-line\r\n  useEffect(() => saveTodosToLocal(), [todos]);\r\n\r\n  function saveTodosToLocal() {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }\r\n\r\n  function toggleStatus(id) {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === id) {\r\n          item.completed = !item.completed;\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n    saveTodosToLocal();\r\n  }\r\n\r\n  function deleteTodo(id) {\r\n    setTodos(todos.filter((item) => item.id !== id));\r\n  }\r\n\r\n  function editTodo(id, newTitle) {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === id) {\r\n          item.title = newTitle;\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n\r\n  function createTodo(title) {\r\n    setTodos(\r\n      todos.concat([\r\n        {\r\n          title,\r\n          id: Date.now(),\r\n          completed: false,\r\n        },\r\n      ])\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={{ deleteTodo, editTodo, saveTodosToLocal }}>\r\n      <div className=\"card\">\r\n        <h1>Список дел</h1>\r\n        <AddTodo onAdd={createTodo} />\r\n        {todos.length ? (\r\n          <TodoList todos={todos} onToggle={toggleStatus} />\r\n        ) : (\r\n          <h2>Нет запланированных дел ♥</h2>\r\n        )}\r\n      </div>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}